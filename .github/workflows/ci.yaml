name: CI

on:
  push:
    paths-ignore:
      - "deploy/**"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:4.0-xenial
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run tests
        run: mvn -B verify

      - name: Analyze with SonarCloud
        if: success()
        run: > 
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 
          -Dsonar.projectKey=hexdump95_msa-auth-spring
          -Dsonar.organization=hexdump95
          -Dsonar.host.url=https://sonarcloud.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: target/

  docker:
    if: contains(github.ref, 'refs/tags/')
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: target
          path: target/

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
